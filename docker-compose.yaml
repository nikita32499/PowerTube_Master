services:

    master-nginx:
        container_name: powertube_master_nginx_dev
        build:
            context: "./nginx/"
        depends_on:
            master-nestjs:
                condition: service_started
        restart: always
        develop:
          watch:
            - path: ./nginx/nginx.conf 
              target: /etc/nginx/nginx.conf
              action: sync+restart
            - path: ./nginx/route.conf 
              target: /etc/nginx/conf.d/default.conf
              action: sync+restart
        ports:
          - "80:80"
        attach: false
    master-postgres:
        container_name: powertube_master_postgres_dev
        image: postgres:16.4-alpine
        restart: always
        env_file: .env.dev
        volumes:
            - /var/postgres_data:/var/lib/postgresql/data
        expose:
          - "5432"
        ports:
          - "5432:5432"
        attach: false
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U powertube -d powertube -h 127.0.0.1 || exit 1"]
          interval: 5s
          timeout: 5s
          retries: 5 
    master-nestjs:
        container_name: powertube_master_nestjs_dev
        build: 
            context: './backend/'
            target: dev
            args:
              APPDIR: "."
        expose:
          - "3001"
        ports:
          - "34560:34560"
        restart: always
        env_file: .env.dev
        depends_on:
            master-postgres:
                condition: service_healthy
            master-rabbitmq:
                condition: service_healthy
        develop:
          watch:
            - path: './backend/'
              action: sync
              target: /app
              ignore:
                - node_modules
                - dist
                - .vscode
    master-rabbitmq:
        container_name: powertube_master_rabbitmq_dev
        image: rabbitmq:3-management
        restart: always
        ports:
            - "5672:5672"    # AMQP протокол
            - "15672:15672"  # Management интерфейс
        env_file: .env.dev
        volumes:
            # - /var/rabbitmq_data:/var/lib/rabbitmq
            - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
            - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
        attach: true
        healthcheck:
          test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
          interval: 30s
          timeout: 10s
          retries: 3
          start_period: 30s